// -*- coding: utf-8; mode: groovy -*-

buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven { url "http://repo.spring.io/plugins-release" }
	}
	dependencies {
		classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2"
	}
}

plugins {
	id "com.github.hierynomus.license" version "0.12.1"
}

ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

defaultTasks "clean", "build"


allprojects {
	repositories {
		mavenCentral()
		jcenter()
	}
	group = "jp.xet.${githubProjectName}"
	version = currentVersion
}
description "Support library for Spring framework, AWS Java SDK and the others."

subprojects {
	apply plugin: "java"

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	// ======== create source and javadoc bundles ========
	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}

	task javadocJar(type: Jar, dependsOn: javadoc) {
		classifier = "javadoc"
		from javadoc.destinationDir
	}

	javadoc {
		failOnError = false
	}

	artifacts {
		archives sourcesJar
		archives javadocJar
	}

	configurations {
		deployerJars
	}

	repositories {
		mavenCentral()
		maven { url "http://maven.xet.jp/release" } // for baseunits
	}
	
	dependencies {
		compile "org.projectlombok:lombok:1.16.2"
		compile "org.slf4j:slf4j-api:$slf4jVersion"
		testCompile "org.slf4j:jul-to-slf4j:$slf4jVersion"
		testCompile "ch.qos.logback:logback-classic:$logbackVersion"
		testCompile "junit:junit:$junitVersion"
		testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
		testCompile "org.mockito:mockito-core:$mockitoCoreVersion"
	}
	
	
	// ======== License =======
	apply plugin: "license"
	license {
		ext.year = Calendar.getInstance().get(Calendar.YEAR)
		header rootProject.file("copyright/HEADER")
		strictCheck true
		mapping {
			java = "SLASHSTAR_STYLE"
		}
		exclude "**/*.json"
	}
	
	
	// ======== Publishing =======
	apply plugin: 'maven-publish'
	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
				artifact sourcesJar {
					classifier "sources"
				}
				artifact javadocJar {
					classifier "javadoc"
				}
				pom.withXml {
					asNode().children().last() + {
						resolveStrategy = Closure.DELEGATE_FIRST
						name project.name
						description project.description
						inceptionYear "2015"
						licenses {
							license {
								name "The Apache Software License, Version 2.0"
								url "http://www.apache.org/license/LICENSE-2.0.txt"
								distribution "repo"
							}
						}
						developers {
							developer {
								id "dai0304"
								name "MIYAMOTO Daisuke"
								email "dai.0304@gmail.com"
							}
						}
					}
				}
			}
		}
	}
	
	if (project.hasProperty("bintrayUser") && project.hasProperty("bintrayKey")) {
		apply plugin: "com.jfrog.bintray"
		bintray {
			user = project.bintrayUser
			key = project.bintrayKey
			publications = ["mavenJava"]
			pkg {
				repo = "spar-wings"
				name = project.name
				desc = project.description
				websiteUrl = "https://github.com/dai0304/spar-wings"
				issueTrackerUrl = "https://github.com/dai0304/spar-wings/issues"
				vcsUrl = "https://github.com/dai0304/spar-wings.git"
				licenses = ["Apache-2.0"]
				labels = ["AWS", "Spring framework"]
			}
		}
	}
}



// ======== wrapper ========
task wrapper(type: Wrapper) {
	gradleVersion = "2.5"
}
